name: Build, Push Docker Images, and Trigger Jenkins CD

on:
  push:
    branches: [ "main" ] # main 브랜치에 푸시될 때 실행

jobs:
  build-push-trigger:
    runs-on: ubuntu-latest # 작업은 우분투 환경에서 실행
    steps:
    # 1. Git 저장소의 코드를 내려받음
    - name: Checkout repository
      uses: actions/checkout@v3

    # 2. Docker Hub 로그인 (ID와 토큰은 GitHub Secret에 저장)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # 3. Java (Gradle) 환경 설정
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'

    # 4. 백엔드 서비스 빌드
    - name: Build with Gradle
      run: ./gradlew build -x test

    # 5. command-service 이미지 빌드 및 푸시
    - name: Build and push command-service
      uses: docker/build-push-action@v4
      with:
        context: ./command-service
        push: true
        tags: kyla333/command-service:latest

    # 6. command-service 배포를 위해 Jenkins 호출
    - name: Trigger Jenkins CD for command-service
      run: |
        curl -X POST "http://192.168.56.100:31441/generic-webhook-trigger/invoke?token=${{ secrets.JENKINS_TOKEN }}&SERVICE_NAME=command-service-deployment&IMAGE_TAG=latest"
    
    # 7. query-service 이미지 빌드 및 푸시
    - name: Build and push query-service
      uses: docker/build-push-action@v4
      with:
        context: ./query-service
        push: true
        tags: kyla333/query-service:latest

    # 8. query-service 배포를 위해 Jenkins 호출
    - name: Trigger Jenkins CD for query-service
      run: |
        curl -X POST "http://192.168.56.100:31441/generic-webhook-trigger/invoke?token=${{ secrets.JENKINS_TOKEN }}&SERVICE_NAME=query-service-deployment&IMAGE_TAG=latest"

    # 9. frontend-app 이미지 빌드 및 푸시
    - name: Build and push frontend-app
      uses: docker/build-push-action@v4
      with:
        context: ./todo-frontend # 프론트엔드 폴더 경로
        push: true
        tags: kyla333/todo-frontend:latest

    # 10. frontend-app 배포를 위해 Jenkins 호출
    - name: Trigger Jenkins CD for frontend-app
      run: |
        curl -X POST "http://192.168.56.100:31441/generic-webhook-trigger/invoke?token=${{ secrets.JENKINS_TOKEN }}&SERVICE_NAME=frontend-deployment&IMAGE_TAG=latest"
