apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        args:
        - "--bind-address=0.0.0.0"
        ports:
        - containerPort: 3306
        readinessProbe:
          # exec 방식을 사용하여 컨테이너 내부에서 직접 명령어를 실행합니다.
          exec:
            # mysqladmin ping: MySQL 서버가 살아있는지 확인하는 가장 표준적인 명령어
            command: ["mysqladmin", "ping", "-h", "127.0.0.1"]
          initialDelaySeconds: 20 # Pod 시작 후 20초 뒤에 검사 시작
          periodSeconds: 10      # 10초마다 반복
          timeoutSeconds: 5        # 5초 안에 응답이 없으면 실패
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret # 1단계에서 만든 Secret의 이름
              key: password     # Secret 안의 데이터 key 이름
        - name: MYSQL_DATABASE
          value: "todo_write_db"
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      # 위에서 연결한 볼륨의 실제 소스는 mysql-pvc 입니다.
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
